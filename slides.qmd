---
title: "Random Forests For All"
subtitle: "A Journey Through One Random Forest"
author: "Matt McGehee (Advisor: Dr. Seals)"
date: last-modified
date-format: long
format:
  revealjs
course: Capstone Projects in Data Science
bibliography: references.bib # file contains bibtex for references
#always_allow_html: true # this allows to get PDF with HTML features
self-contained: true
execute: 
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 72
---

## Data Exploration {.smaller}

The dataset contains sales transaction details from a B2B context. The data tracks information on sales orders, quantities ordered, shipping details, and item-level statuses. Below is the data definition table that explains the key attributes.

```{r}
library(dplyr)
library(kableExtra)

data_def <- data.frame(
  Attribute = c("OPCO", "SalesOrderID", "CustomerPO", "Product", "Description", 
                "Substrate", "RequestedDeliveryDate", "DateFulfilled", 
                "qtyOrdered", "qtyFulfilled", "UnitPrice", "TotalPrice", 
                "Class", "ShipToName", "ShipToAddress", "SalesOrderStatus", "SalesItemStatus"),
  Format = c("Varchar", "Numeric", "Numeric", "Varchar", "Varchar", 
             "Varchar", "Date", "Date", 
             "Numeric", "Numeric", "Numeric", "Numeric", 
             "Varchar", "Varchar", "Varchar", "Varchar", "Varchar"),
  Description = c("The customer placing the order, typically a distributor.",
                  "Unique identifier assigned to each sales order.",
                  "Customer's identifier for their order, sent to BCC.",
                  "Unique identifier assigned to each product.",
                  "Description of the product being sold.",
                  "Type of product/material.",
                  "Date the delivery was scheduled originally.",
                  "Date the delivery was made.",
                  "Quantity ordered on the order.",
                  "Quantity delivered on the order.",
                  "Price of each case of product SSI charges the customer.",
                  "Total price of the sales order.",
                  "Customer name.",
                  "Name of the ordering party.",
                  "Address where the order needs to be delivered.",
                  "Status of sales order.",
                  "Status of each line item on the sales order.")
)


data_def %>%
  kbl(caption = "Sales Transaction Dataset Definition", align = "l") %>%
  kable_styling(font_size = 14, full_width = FALSE)  # Set smaller font and narrower table width

```

## Data Summary {.smaller}

This dataset allows for various analyses including:

-   Order fulfillment performance: By comparing the qtyOrdered and qtyFulfilled attributes, and the RequestedDeliveryDate against the DateFulfilled, one can analyze how efficiently orders are being fulfilled and whether delivery deadlines are met.

-   Sales trends and pricing: The UnitPrice and TotalPrice fields, alongside Product and Class, provide opportunities to evaluate product pricing strategies and customer buying patterns.

-   Customer segmentation: With attributes like Class and ShipToName, you can analyze customer behavior and segment them based on order sizes, frequency, or geography.

This dataset provides a detailed overview of the company's sales transactions. By leveraging these attributes, one can assess order performance, customer segmentation, and pricing strategies.

## Table 1

<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;border-style: solid;border-width: 1px;border-color: black;}
.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:12px;
  overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:13px;
  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-bobw{font-weight:bold;text-align:center;vertical-align:bottom}
.tg .tg-7zrl{text-align:left;vertical-align:bottom}
.tg .tg-j6zm{font-weight:bold;text-align:left;vertical-align:bottom}
.tg .tg-8d8j{text-align:center;vertical-align:bottom}
</style>
<table class="tg"><thead>
  <tr>
    <th class="tg-7zrl"></th>
    <th class="tg-j6zm">Total Orders</th>
    <th class="tg-j6zm">Closed Short</th>
    <th class="tg-j6zm">Fulfilled</th>
  </tr></thead>
<tbody>
  <tr>
    <td class="tg-7zrl"></td>
    <td class="tg-j6zm">(n=7585)</td>
    <td class="tg-j6zm">(n=733)</td>
    <td class="tg-j6zm">(n=6852)</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Top Customers</td>
    <td class="tg-7zrl"> </td>
    <td class="tg-7zrl"> </td>
    <td class="tg-7zrl"> </td>
  </tr>
  <tr>
    <td class="tg-7zrl">Smoothie Island</td>
    <td class="tg-8d8j">1701 (22.43%)</td>
    <td class="tg-8d8j">455 (62.07%)</td>
    <td class="tg-8d8j">1246 (18.18%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Philly Bite</td>
    <td class="tg-8d8j">1556 (20.51%)</td>
    <td class="tg-8d8j">267 (36.43%)</td>
    <td class="tg-8d8j">1289 (18.81%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">PlatePioneers</td>
    <td class="tg-8d8j">1396 (18.40%)</td>
    <td class="tg-8d8j">143 (19.51%)</td>
    <td class="tg-8d8j">1253 (18.29%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Berl Company</td>
    <td class="tg-8d8j">906 (11.94%)</td>
    <td class="tg-8d8j">5 (0.68%)</td>
    <td class="tg-8d8j">901 (13.15%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">DineLink Intl</td>
    <td class="tg-8d8j">589 (7.77%)</td>
    <td class="tg-8d8j">42 (5.73%)</td>
    <td class="tg-8d8j">547 (7.98%)</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Top Products</td>
    <td class="tg-8d8j"></td>
    <td class="tg-8d8j"></td>
    <td class="tg-8d8j"></td>
  </tr>
  <tr>
    <td class="tg-7zrl">DC-01</td>
    <td class="tg-8d8j">1135 (14.96%)</td>
    <td class="tg-8d8j">345 (47.07%)</td>
    <td class="tg-8d8j">790 (11.53%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">TSC-PQB-01</td>
    <td class="tg-8d8j">1087 (14.33%)</td>
    <td class="tg-8d8j">389 (53.07%)</td>
    <td class="tg-8d8j">698 (10.19%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">TSC-PW14X16-01</td>
    <td class="tg-8d8j">848 (11.18%)</td>
    <td class="tg-8d8j">283 (38.61%)</td>
    <td class="tg-8d8j">565 (8.25%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">CMI-PCK-01</td>
    <td class="tg-8d8j">802 (10.57%)</td>
    <td class="tg-8d8j">288 (39.29%)</td>
    <td class="tg-8d8j">514 (7.50%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">PC-05-B1</td>
    <td class="tg-8d8j">745 (9.82%)</td>
    <td class="tg-8d8j">220 (30.01%)</td>
    <td class="tg-8d8j">525 (7.66%)</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Top Distributors</td>
    <td class="tg-8d8j"></td>
    <td class="tg-8d8j"></td>
    <td class="tg-8d8j"></td>
  </tr>
  <tr>
    <td class="tg-7zrl">Ed Don &amp; Company - Miramar</td>
    <td class="tg-8d8j">210 (2.77%)</td>
    <td class="tg-8d8j">0 (0.00%)</td>
    <td class="tg-8d8j">210 (3.06%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">PFG- Gainesville</td>
    <td class="tg-8d8j">197 (2.60%)</td>
    <td class="tg-8d8j">0 (0.00%)</td>
    <td class="tg-8d8j">197 (2.88%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Ed Don &amp; Company -&nbsp;&nbsp;&nbsp;Woodridge</td>
    <td class="tg-8d8j">186 (2.45%)</td>
    <td class="tg-8d8j">0 (0.00%)</td>
    <td class="tg-8d8j">186 (2.71%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Ed Don &amp; Company - Mira&nbsp;&nbsp;&nbsp;Loma</td>
    <td class="tg-8d8j">180 (2.37%)</td>
    <td class="tg-8d8j">0 (0.00%)</td>
    <td class="tg-8d8j">180 (2.63%)</td>
  </tr>
  <tr>
    <td class="tg-7zrl">.Ed Don - Miramar</td>
    <td class="tg-8d8j">162 (2.14%)</td>
    <td class="tg-8d8j">0 (0.00%)</td>
    <td class="tg-8d8j">162 (2.36%)</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Top Substrates</td>
    <td class="tg-bobw">Paper</td>
    <td class="tg-bobw">Plastic</td>
    <td class="tg-bobw">Bagasse</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Revenue($103,826,286)</td>
    <td class="tg-8d8j">$54,838,585 (52.82%)</td>
    <td class="tg-8d8j">$40,336,669 (38.85%)</td>
    <td class="tg-8d8j">$4,350,337 (4.19%)</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Quantity Ordered</td>
    <td class="tg-bobw">Min</td>
    <td class="tg-bobw">Mean</td>
    <td class="tg-bobw">Max</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Total Ordered(1,971,237)</td>
    <td class="tg-8d8j">1</td>
    <td class="tg-8d8j">61.47</td>
    <td class="tg-8d8j">23,160</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Unit Price</td>
    <td class="tg-bobw">Min</td>
    <td class="tg-bobw">Mean</td>
    <td class="tg-bobw">Max</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Key Stats</td>
    <td class="tg-8d8j">$0.16 </td>
    <td class="tg-8d8j">$62.60 </td>
    <td class="tg-8d8j">$864.00</td>
  </tr>
  <tr>
    <td class="tg-j6zm">Total Price</td>
    <td class="tg-bobw">Min</td>
    <td class="tg-bobw">Mean</td>
    <td class="tg-bobw">Max</td>
  </tr>
  <tr>
    <td class="tg-7zrl">Key Stats</td>
    <td class="tg-8d8j">$4.92 </td>
    <td class="tg-8d8j">$3,430.74 </td>
    <td class="tg-8d8j">$143,084.74</td>
  </tr>
</tbody></table>

## Data Visualizations

```{r}
library(ggplot2)
library(dplyr)

sales_data <- read.csv("data_as_csv.csv")

product_qty <- sales_data %>%
  group_by(Product) %>%
  summarise(TotalQuantityOrdered = sum(qtyOrdered, na.rm = TRUE)) %>%
  arrange(desc(TotalQuantityOrdered)) %>%
  slice(1:20)

ggplot(product_qty, aes(x = reorder(Product, TotalQuantityOrdered), y = TotalQuantityOrdered)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  coord_flip() +
  labs(title = "Top 20 Products by Total Quantity Ordered", x = "Product", y = "Total Quantity Ordered")

```

## Data Visualizations (cont)

```{r}
library(ggplot2)
library(dplyr)

sales_data <- read.csv("data_as_csv.csv")

exclude_products <- c("OUTBOUND SHIPPING", "Outbound Shipping", "Shipping Charge", "SHIPPING CHARGE")

filtered_data <- sales_data %>%
  filter(TotalPrice > 0, !Product %in% exclude_products)

Q1 <- quantile(filtered_data$TotalPrice, 0.25, na.rm = TRUE)
Q3 <- quantile(filtered_data$TotalPrice, 0.75, na.rm = TRUE)
IQR_value <- IQR(filtered_data$TotalPrice, na.rm = TRUE)

lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value

filtered_data_IQR <- filtered_data %>%
  filter(TotalPrice >= lower_bound & TotalPrice <= upper_bound)

ggplot(filtered_data_IQR, aes(x = TotalPrice)) +
  geom_histogram(binwidth = 100, fill = "lightblue", color = "black") +
  theme_minimal() +
  labs(title = "Distribution of Total Prices (Filtered by IQR)", x = "Total Price", y = "Frequency")

```

## Methodolgy - Random Forest Classification {.smaller}

- **Random Forest Overview**:
  - Builds multiple decision trees for stable predictions.
  - Handles large datasets and reduces overfitting by averaging results.
  
- **Variables Used**:
  - **SalesOrderStatus**: Fulfilled vs. Unfulfilled.
  - **qtyOrdered**: Quantity of items ordered.
  - **UnitPrice**: Price per unit.
  - **Substrate**: Product material type.
  - **Product**: Product name.
  
- **Sampling**:
  - Stratified sampling used to ensure balanced Fulfilled/Unfulfilled orders.
  - 80% of the data was used for training and 20% for testing.

## Methodolgy - Tree Building Process {.smaller}

- **Algorithm**: CART (Classification and Regression Trees)
  - **Gini Impurity** for classification:
    $$ G = 1 - \sum_{k=1}^{K} p_k^2 $$
  - **Mean Squared Error (MSE)** for regression:
    $$ MSE = \frac{1}{n} \sum_{i=1}^{n} (y_i - \hat{y})^2 $$

- **Bootstrapping**:
  - Random samples with replacement to build decision trees.
  - Predictions aggregated from all trees.

## Methodolgy - Hyperparameter Tuning {.smaller}

- **Tuned Parameters**:
  - **mtry**: Number of features sampled at each split.
  - **ntree**: Number of trees in the forest.
  - **nodesize**: Minimum observations required to split a node.
  
- **Cross-Validation**:
  - 5-fold cross-validation used to prevent overfitting.
  - Final model based on best cross-validation accuracy.

## Methodolgy - Model Evaluation {.smaller}

- **Metrics**:
  - **Confusion Matrix**: Accuracy, precision, recall, F1 Score.
  - **ROC Curve** & AUC: Measures model's discrimination ability.
  
- **Feature Importance**:
  - **Mean Decrease in Impurity (MDI)**.
  - **Mean Decrease in Accuracy (MDA)**.
  
## Methodolgy - Statistical Programming {.smaller}

- **Tools Used**:
  - **R Version 4.4.1** for statistical computing.
  - Libraries used: `randomForest`, `dplyr`, `caret`, `pROC`.
